<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.p2p.domain.loan.repository.RefundRepository">

    <!--基本字段定义 -->
    <sql id="base_column">
        ID,
        AMOUNT,
        REFUND_TIME,
        TOACCOUNT_TIME,
        TYPE,
        STATUS,
        REASON,
        INVEST_CODE,
        USER_ID,
        LOAN_CODE,
        SERIAL_NUMBER,
        TENANT_ID,
        CREATE_TIME,
        UPDATE_TIME,
        CREATE_USER_ID,
        UPDATE_USER_ID,
        VERSION
    </sql>

    <!--按主键进行查询，返回唯一一条记录 对应repository findOne方法 -->
    <select id="findOne" parameterType="string" resultType="Refund">
        SELECT 
            <include refid="base_column" />
        FROM 
            REFUND
        WHERE
            ID = #{id}
    </select>
 
 

    <!--无条件全部记录检索 对应repository findAll方法 -->
    <select id="findAll" resultType="Refund">
        SELECT 
            <include refid="base_column" />
        FROM 
            REFUND
    </select>

    <!--无条件全部记录分页检索 对应repository findAll方法 -->
    <select id="findPageAll" parameterType="RefundCriteria" resultType="Refund">
        SELECT
            <include refid="base_column" />
        FROM 
            REFUND
    </select>

    <!--插入记录 对应repository insert方法 -->
    <insert id="insert" parameterType="Refund">
        INSERT INTO
            REFUND
        (
             <include refid="base_column" />

        )
        VALUES
        (
          #{id},
          #{amount},
          #{refundTime},
          #{toaccountTime},
          #{type},
          #{status},
          #{reason},
          #{investCode},
          #{userId},
          #{loanCode},
          #{serialNumber},
          #{tenantId},
          #{createTime},
          #{updateTime},
          #{createUserId},
          #{updateUserId},
          #{version}
        )
    </insert>

    <!--动态更新 对Input来的数据不为空的字段进行更新 对应repository dynamicUpdate方法 -->
    <update id="dynamicUpdate" parameterType="Refund">
        UPDATE
            REFUND
        <set>
            <if test="amount != null">
                AMOUNT = #{amount},
            </if>
            <if test="refundTime != null">
                REFUND_TIME = #{refundTime},
            </if>
            <if test="toaccountTime != null">
                TOACCOUNT_TIME = #{toaccountTime},
            </if>
            <if test="type != null">
                TYPE = #{type},
            </if>
            <if test="status != null">
                STATUS = #{status},
            </if>
            <if test="reason != null">
                REASON = #{reason},
            </if>
            <if test="investCode != null">
                INVEST_CODE = #{investCode},
            </if>
            <if test="userId != null">
                USER_ID = #{userId},
            </if>
            <if test="loanCode != null">
                LOAN_CODE = #{loanCode},
            </if>
            <if test="serialNumber != null">
                SERIAL_NUMBER = #{serialNumber},
            </if>
            <if test="tenantId != null">
                TENANT_ID = #{tenantId},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime},
            </if>
            <if test="createUserId != null">
                CREATE_USER_ID = #{createUserId},
            </if>
            <if test="updateUserId != null">
                UPDATE_USER_ID = #{updateUserId},
            </if>
            <if test="version != null">
                VERSION = #{version}
            </if>
        </set>
        WHERE
            ID = #{id}
    </update>

    <!--动态更新 按照实体的值实际数据进行更新对应repository update方法 -->
    <update id="update" parameterType="Refund">
        UPDATE
            REFUND
        SET
            AMOUNT = #{amount},
            REFUND_TIME = #{refundTime},
            TOACCOUNT_TIME = #{toaccountTime},
            TYPE = #{type},
            STATUS = #{status},
            REASON = #{reason},
            INVEST_CODE = #{investCode},
            USER_ID = #{userId},
            LOAN_CODE = #{loanCode},
            SERIAL_NUMBER = #{serialNumber},
            TENANT_ID = #{tenantId},
            CREATE_TIME = #{createTime},
            UPDATE_TIME = #{updateTime},
            CREATE_USER_ID = #{createUserId},
            UPDATE_USER_ID = #{updateUserId},
            VERSION = #{version}
        WHERE
            ID = #{id}
    </update>
    
    <!--假删除 对应repository suspend方法 -->
    <update id="suspend" parameterType="string">
        UPDATE
            REFUND
        SET
            DEL_FLAG=1
        WHERE
            ID = #{id}
    </update>
    
    <!--真删除 对应repository delete方法 -->    
    <delete id="delete" parameterType="string">
        DELETE FROM 
            REFUND
        WHERE
            ID = #{id}
    </delete>
</mapper>
