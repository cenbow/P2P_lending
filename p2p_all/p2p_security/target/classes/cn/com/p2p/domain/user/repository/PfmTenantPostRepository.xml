<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.p2p.domain.user.repository.PfmTenantPostRepository">

    <!--基本字段定义 -->
    <sql id="base_column">
        TENANT_CD,
        POST_CD,
        POST_NAME,
        POST_MEM,
        VALID_FLAG,
        CREATE_TIME,
        UPDATE_TIME,
        CREATE_USER_ID,
        UPDATE_USER_ID,
        VERSION
    </sql>

    <!--按主键进行查询，返回唯一一条记录 对应repository findOne方法 -->
    <select id="findOne" parameterType="string" resultType="PfmTenantPost">
        SELECT 
            <include refid="base_column" />
        FROM 
            PFM_TENANT_POST
        WHERE
            POST_CD = #{postCd}
    </select>
 
    <!--按主键进行查询，返回唯一一条记录 对应repository findPfmTenantPostByKeys方法 -->
    <select id="findPfmTenantPostByKeys" resultType="PfmTenantPost">
        SELECT
            <include refid="base_column" />
        FROM
            PFM_TENANT_POST
        WHERE
            TENANT_CD = #{tenantCd} AND POST_CD = #{postCd}
    </select>
 

    <!--无条件全部记录检索 对应repository findAll方法 -->
    <select id="findAll" resultType="PfmTenantPost">
        SELECT 
            <include refid="base_column" />
        FROM 
            PFM_TENANT_POST
    </select>

    <!--无条件全部记录分页检索 对应repository findAll方法 -->
    <select id="findPageAll" parameterType="PfmTenantPostCriteria" resultType="PfmTenantPost">
        SELECT
            <include refid="base_column" />
        FROM 
            PFM_TENANT_POST
    </select>

    <!--插入记录 对应repository insert方法 -->
    <insert id="insert" parameterType="PfmTenantPost">
        INSERT INTO
            PFM_TENANT_POST
        (
             <include refid="base_column" />

        )
        VALUES
        (
          #{tenantCd},
          #{postCd},
          #{postName},
          #{postMem},
          #{validFlag},
          #{createTime},
          #{updateTime},
          #{createUserId},
          #{updateUserId},
          #{version}
        )
    </insert>

    <!--动态更新 对Input来的数据不为空的字段进行更新 对应repository dynamicUpdate方法 -->
    <update id="dynamicUpdate" parameterType="PfmTenantPost">
        UPDATE
            PFM_TENANT_POST
        <set>
            <if test="postName != null">
                POST_NAME = #{postName},
            </if>
            <if test="postMem != null">
                POST_MEM = #{postMem},
            </if>
            <if test="validFlag != null">
                VALID_FLAG = #{validFlag},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime},
            </if>
            <if test="createUserId != null">
                CREATE_USER_ID = #{createUserId},
            </if>
            <if test="updateUserId != null">
                UPDATE_USER_ID = #{updateUserId},
            </if>
            <if test="version != null">
                VERSION = #{version}
            </if>
        </set>
        WHERE
            TENANT_CD = #{tenantCd} AND POST_CD = #{postCd}
    </update>

    <!--动态更新 按照实体的值实际数据进行更新对应repository update方法 -->
    <update id="update" parameterType="PfmTenantPost">
        UPDATE
            PFM_TENANT_POST
        SET
            POST_NAME = #{postName},
            POST_MEM = #{postMem},
            VALID_FLAG = #{validFlag},
            CREATE_TIME = #{createTime},
            UPDATE_TIME = #{updateTime},
            CREATE_USER_ID = #{createUserId},
            UPDATE_USER_ID = #{updateUserId},
            VERSION = #{version}
        WHERE
            TENANT_CD = #{tenantCd} AND POST_CD = #{postCd}
    </update>
    
    <!--假删除 对应repository suspend方法 -->
    <update id="suspend" >
        UPDATE
            PFM_TENANT_POST
        SET
            DEL_FLAG=1
        WHERE
            TENANT_CD = #{tenantCd} AND POST_CD = #{postCd}
    </update>
    
    <!--真删除 对应repository delete方法 -->    
    <delete id="delete" parameterType="string">
        DELETE FROM 
            PFM_TENANT_POST
        WHERE
            TENANT_CD = #{tenantCd} AND POST_CD = #{postCd}
    </delete>
</mapper>
